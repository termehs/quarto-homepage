{
  "hash": "9de31494911c2c4075c66129422a7f0f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"La Quinta is Spanish for next to Denny's\"\nauthor: \"Termeh Shafie <br> (adapted from original script by Mine Ã‡etinkaya-Rundel)\"\nformat:\n  html:\n    embed-resources: true\neditor: visual\nexecute:\n  warning: false\n---\n\n\n\n\nHave you ever taken a road trip in the US and thought to yourself \"I wonder what La Quinta means\". Well, the late comedian [Mitch Hedberg](https://en.wikipedia.org/wiki/Mitch_Hedberg) thinks it's Spanish for *next to Denny's*.\n\nIf you're not familiar with these two establishments, [Denny's](https://www.dennys.com/) is a casual diner chain that is open 24 hours and [La Quinta Inn and Suites](http://www.lq.com/) is a hotel chain.\n\nThese two establishments tend to be clustered together, or at least this observation is a joke made famous by Mitch Hedberg. In this lab we explore the validity of this joke and along the way learn some more data wrangling and tips for visualizing spatial data.\n\nThe inspiration for this comes from a blog post by John Reiser on his *new jersey geographer* blog. You can read that analysis [here](http://njgeo.org/2014/01/30/mitch-hedberg-and-gis/). Reiser's blog post focuses on scraping data from Denny's and La Quinta Inn and Suites websites using Python. Here, we focus on visualization and analysis of these data.\n\n# Learning goals\n\n-   Working with spatial data\n-   Writing and using a custom function\n-   Visualizing spatial data\n-   Joining data frames\n\n## Packages\n\nWe'll use the **tidyverse** package for much of the data wrangling and visualisation and the data lives in the **dsbox** package. These packages are already installed for you. You can load them by running the following in your Console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n```\n:::\n\n\n## Data\n\nThe data sets we'll use are called `dennys` and `laquinta` and are available for download. Note that these data were scraped from [here](https://locations.dennys.com/) and [here](https://www.lq.com/en/findandbook/hotel-listings.html), respectively. You can find information about the data sets [here](https://rstudio-education.github.io/dsbox/reference/dennys.html) and [here](https://rstudio-education.github.io/dsbox/reference/laquinta.html). To help with our analysis we will also use a data set on US states.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlaquinta <- read_csv(\"data/laquinta.csv\")\ndennys <- read_csv(\"data/dennys.csv\")\nstates <- read_csv(\"data/states.csv\")\n```\n:::\n\n\nEach observation in the `states` dataset represents a state, including DC. Along with the name of the state we have the two-letter abbreviation and we have the geographic area of the state (in square miles).\n\n# Exercises\n\n1.  What are the dimensions of the Denny's dataset? (Hint: Use inline R code and functions like `nrow` and `ncol` to compose your answer.) What does each row in the dataset represent? What are the variables?\n\n2.  What are the dimensions of the La Quinta's dataset? What does each row in the dataset represent? What are the variables?\n\nWe would like to limit our analysis to Denny's and La Quinta locations in the United States.\n\n3.  Take a look at the websites that the data come from (linked above). Are there any La Quinta's locations outside of the US? If so, which countries? What about Denny's?\n\n4.  Now take a look at the data. What would be some ways of determining whether or not either establishment has any locations outside the US using just the data (and not the websites). Don't worry about whether you know how to implement this, just brainstorm some ideas. Write down at least one as your answer, but you're welcomed to write down a few options too.\n\nWe will determine whether or not the establishment has a location outside the US using the `state` variable in the `dennys` and `laquinta` datasets. We know exactly which states are in the US, and we have this information in the `states` dataframe we loaded.\n\n5.  Find the Denny's locations that are outside the US, if any. To do so, filter the Denny's locations for observations where `state` is not in `states$abbreviation`. The code for this is given below. Note that the `%in%` operator matches the states listed in the `state` variable to those listed in `states$abbreviation`. The `!` operator means **not**. Are there any Denny's locations outside the US?\n\nFilter for `state`s that are not in `states$abbreviation`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n6.  Add a country variable to the Denny's dataset and set all observations equal to `\"United States\"`. Remember, you can use the `mutate` function for adding a variable. Make sure to save the result of this as `dennys` again so that the stored data frame contains the new variable going forward.\n\nWe don't need to tell R how many times to repeat the character string \"United States\" to fill in the data for all observations, R takes care of that automatically:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n7.  Find the La Quinta locations that are outside the US, and figure out which country they are in. This might require some googling. Take notes, you will need to use this information in the next exercise.\n\n8.  Add a country variable to the La Quinta dataset. Use the `case_when` function to populate this variable. You'll need to refer to your notes from Exercise 7 about which country the non-US locations are in. Here is some starter code to get you going:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nGoing forward we will work with the data from the United States only. All Denny's locations are in the United States, so we don't need to worry about them. However we do need to filter the La Quinta dataset for locations in United States.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n9.  Which states have the most and fewest Denny's locations? What about La Quinta? Is this surprising? Why or why not?\n\nNext, let's calculate which states have the most Denny's locations *per thousand square miles*. This requires *joining* information from the frequency tables you created in Exercise 8 with information from the `states` data frame.\n\nFirst, we count how many observations are in each state, which will give us a data frame with two variables: `state` and `n`. Then, we join this data frame with the `states` data frame. However note that the variables in the `states` data frame that has the two-letter abbreviations is called `abbreviation`. So when we're joining the two data frames we specify that the `state` variable from the Denny's data should be matched `by` the `abbreviation` variable from the `states` data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nBefore you move on the the next question, run the code above and take a look at the output. In the next exercise you will need to build on this pipe.\n\n10. Which states have the most Denny's locations per thousand square miles? What about La Quinta?\n\nNext, we put the two datasets together into a single data frame. However before we do so, we need to add an identifier variable. We'll call this `establishment` and set the value to `\"Denny's\"` and `\"La Quinta\"` for the `dennys` and `laquinta` data frames, respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nSince the two data frames have the same columns, we can easily bind them with the `bind_rows` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nWe can plot the locations of the two establishments using a scatter plot, and color the points by the establishment type. Note that the latitude is plotted on the x-axis and the longitude on the y-axis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nThe following two questions ask you to create visualizations. These should follow best practices you learned in class, such as informative titles, axis labels, etc. See <http://ggplot2.tidyverse.org/reference/labs.html> for help with the syntax. You can also choose different themes to change the overall look of your plots, see <http://ggplot2.tidyverse.org/reference/ggtheme.html> for help with these.\n\n11. Filter the data for observations in North Carolina only, and recreate the plot. You should also adjust the transparency of the points, by setting the `alpha` level, so that it's easier to see the overplotted ones. Visually, does Mitch Hedberg's joke appear to hold here?\n\n12. Now filter the data for observations in Texas only, and recreate the plot, with an appropriate `alpha` level. Visually, does Mitch Hedberg's joke appear to hold here?\n\n### Now we take a quantitative approach to answer these questions\n\n13. Filter the Denny's dataframe for Alaska (AK) and save the result as `dn_ak`. How many Denny's locations are there in Alaska?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n14. Filter the La Quinta dataframe for Alaska (AK) and save the result as `lq_ak`. How many La Quinta locations are there in Alaska?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nNext we'll calculate the distance between all Denny's and all La Quinta locations in Alaska. Let's take this step by step:\n\n**Step 1:** There are 3 Denny's and 2 La Quinta locations in Alaska. (If you answered differently above, you might want to recheck your answers.)\n\n![](img/dennys-laquinta-sketches/dennys-laquinta-sketches.001.png){width=\"300px\" height=\"300px\"}\n\n**Step 2:** Let's focus on the first Denny's location. We'll need to calculate two distances for it: (1) distance between Denny's 1 and La Quinta 1 and (2) distance between Denny's 1 and La Quinta (2).\n\n![](img/dennys-laquinta-sketches/dennys-laquinta-sketches.002.png){width=\"300px\" height=\"150px\"}\n\n**Step 3:** Now let's consider all Denny's locations.\n\n![](img/dennys-laquinta-sketches/dennys-laquinta-sketches.003.png){width=\"300px\" height=\"450px\"}\n\n15. How many pairings are there between all Denny's and all La Quinta locations in Alaska, i.e. how many distances do we need to calculate between the locations of these establishments in Alaska?\n\nIn order to calculate these distances we need to first restructure our data to pair the Denny's and La Quinta locations. To do so, we will join the two data frames. We have six join options in R. Each of these join functions take at least three arguments: `x`, `y`, and `by`.\n\n-   `x` and `y` are data frames to join\n-   `by` is the variable(s) to join by\n\nFour of these join functions combine variables from the two data frames:\n\n**Note** These are called **mutating joins**\n\n-   `inner_join()`: return all rows from `x` where there are matching values in `y`, and all columns from `x` and `y`.\n\n-   `left_join()`: return all rows from `x`, and all columns from `x` and `y`. Rows in x with no match in y will have NA values in the new columns.\n\n-   `right_join()`: return all rows from `y`, and all columns from `x` and `y`. Rows in y with no match in x will have NA values in the new columns.\n\n-   `full_join()`: return all rows and all columns from both `x` and `y`. Where there are not matching values, returns NA for the one missing.\n\nAnd the other two join functions only keep cases from the left-hand data frame, and are called **filtering joins**. We'll learn about these another time but you can find out more about the join functions in the help files for any one of them, e.g. `?full_join`.\n\nIn practice we mostly use mutating joins. In this case we want to keep all rows and columns from both `dn_ak` and `lq_ak` data frames. So we will use a `full_join`.\n\n![Full join of Denny's and La Quinta locations in AK](img/dennys-laquinta-sketches/dennys-laquinta-sketches.004.png){height=\"300px\" width=\"300px\"}\n\nLet's join the data on Denny's and La Quinta locations in Alaska, and take a look at what it looks like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n16. How many observations are in the joined `dn_lq_ak` data frame? What are the names of the variables in this data frame.\n\n`.x` in the variable names means the variable comes from the `x` data frame (the first argument in the `full_join` call, i.e. `dn_ak`), and `.y` means the variable comes from the `y` data frame. These varibles are renamed to include `.x` and `.y` because the two data frames have the same variables and it's not possible to have two variables in a data frame with the exact same name.\n\nNow that we have the data in the format we wanted, all that is left is to calculate the distances between the pairs.\n\n17. What function from the tidyverse do we use the add a new variable to a data frame while keeping the existing variables?\n\nOne way of calculating the distance between any two points on the earth is to use the Haversine distance formula. This formula takes into account the fact that the earth is not flat, but instead spherical.\n\nThis function is not available in R, but we have it saved in a file called `haversine.R` that we can load and then use:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\nThis function takes five arguments:\n\n-   Longitude and latitude of the first location\n-   Longitude and latitude of the second location\n-   A parameter by which to round the responses\n\n18. Calculate the distances between all pairs of Denny's and La Quinta locations and save this variable as `distance`. Make sure to save this variable in THE `dn_lq_ak` data frame so that you can use it later.\n\n19. Calculate the minimum distance between a Denny's and La Quinta for each Denny's location. To do so we group by Denny's locations and calculate a new variable that stores the information for the minimum distance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# code goes here\n```\n:::\n\n\n20. Describe the distribution of the distances Denny's and the nearest La Quinta locations in Alaska. Also include an appripriate visualization and relevant summary statistics.\n\n21. Repeat the same analysis for North Carolina: (i) filter Denny's and La Quinta Data Frames for NC, (ii) join these data frames to get a completelist of all possible pairings, (iii) calculate the distances between all possible pairings of Denny's and La Quinta in NC, (iv) find the minimum distance between each Denny's and La Quinta location, (v) visualize and describe the distribution of these shortest distances using appropriate summary statistics.\n\n22. Repeat the same analysis for Texas.\n\n23. Repeat the same analysis for a state of your choosing, different than the ones we covered so far.\n\n24. Among the states you examined, where is Mitch Hedberg's joke most likely to hold true? Explain your reasoning.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
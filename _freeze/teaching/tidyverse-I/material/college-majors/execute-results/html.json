{
  "hash": "34fc94b998aabf9cf58c4630f247e646",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle:  \"What should I major in?\"\nauthor: \"Termeh Shafie <br> (adapted from original script by Mine Çetinkaya-Rundel)\"\nformat:\n  html:\n    embed-resources: true\neditor: visual\nexecute:\n  warning: false\n---\n\n\n\n\n![](img/graduate.jpg)\n\nThe first step in the process of turning information into knowledge process is to summarize and describe the raw information - the data.\nIn this assignment we explore data on college majors and earnings, specifically the data begin the FiveThirtyEight story [\"The Economic Guide To Picking A College Major\"](https://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/).\n\nThese data originally come from the American Community Survey (ACS) 2010-2012 Public Use Microdata Series.\nWhile this is outside the scope of this assignment, if you are curious about how raw data from the ACS were cleaned and prepared, see [the code](https://github.com/fivethirtyeight/data/blob/master/college-majors/college-majors-rscript.R) FiveThirtyEight authors used.\n\nWe should also note that there are many considerations that go into picking a major.\nEarnings potential and employment prospects are two of them, and they are important, but they don't tell the whole story.\nKeep this in mind as you analyze the data.\n\n## Packages\n\nWe'll use the **tidyverse** package for much of the data wrangling and visualisation, the **scales** package for better formatting of labels on visualisations, and the data lives in the **fivethirtyeight** package.\nThese packages are already installed for you.\nYou can load them by running the following in your Console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(fivethirtyeight)\n```\n:::\n\n\n## Data\n\nThe data can be found in the **fivethirtyeight** package, and it's called `college_recent_grads`.\nSince the dataset is distributed with the package, we don't need to load it separately; it becomes available to us when we load the package.\nYou can find out more about the dataset by inspecting its documentation, which you can access by running `?college_recent_grads` in the Console or using the Help menu in RStudio to search for `college_recent_grads`.\nYou can also find this information [here](https://fivethirtyeight-r.netlify.app/reference/college_recent_grads.html).\n\nYou can also take a quick peek at your data frame and view its dimensions with the `glimpse` function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(college_recent_grads)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 173\nColumns: 21\n$ rank                        <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,…\n$ major_code                  <int> 2419, 2416, 2415, 2417, 2405, 2418, 6202, …\n$ major                       <chr> \"Petroleum Engineering\", \"Mining And Miner…\n$ major_category              <chr> \"Engineering\", \"Engineering\", \"Engineering…\n$ total                       <int> 2339, 756, 856, 1258, 32260, 2573, 3777, 1…\n$ sample_size                 <int> 36, 7, 3, 16, 289, 17, 51, 10, 1029, 631, …\n$ men                         <int> 2057, 679, 725, 1123, 21239, 2200, 2110, 8…\n$ women                       <int> 282, 77, 131, 135, 11021, 373, 1667, 960, …\n$ sharewomen                  <dbl> 0.1205643, 0.1018519, 0.1530374, 0.1073132…\n$ employed                    <int> 1976, 640, 648, 758, 25694, 1857, 2912, 15…\n$ employed_fulltime           <int> 1849, 556, 558, 1069, 23170, 2038, 2924, 1…\n$ employed_parttime           <int> 270, 170, 133, 150, 5180, 264, 296, 553, 1…\n$ employed_fulltime_yearround <int> 1207, 388, 340, 692, 16697, 1449, 2482, 82…\n$ unemployed                  <int> 37, 85, 16, 40, 1672, 400, 308, 33, 4650, …\n$ unemployment_rate           <dbl> 0.018380527, 0.117241379, 0.024096386, 0.0…\n$ p25th                       <dbl> 95000, 55000, 50000, 43000, 50000, 50000, …\n$ median                      <dbl> 110000, 75000, 73000, 70000, 65000, 65000,…\n$ p75th                       <dbl> 125000, 90000, 105000, 80000, 75000, 10200…\n$ college_jobs                <int> 1534, 350, 456, 529, 18314, 1142, 1768, 97…\n$ non_college_jobs            <int> 364, 257, 176, 102, 4440, 657, 314, 500, 1…\n$ low_wage_jobs               <int> 193, 50, 0, 0, 972, 244, 259, 220, 3253, 3…\n```\n\n\n:::\n:::\n\n\nThe `college_recent_grads` data frame is a trove of information.\nLet's think about some questions we might want to answer with these data:\n\n-   Which major has the lowest unemployment rate?\n-   Which major has the highest percentage of women?\n-   How do the distributions of median income compare across major categories?\n-   Do women tend to choose majors with lower or higher earnings?\n\nIn the next section we aim to answer these questions.\n\n# Exercises\n## Which major has the lowest unemployment rate?\n\nIn order to answer this question all we need to do is sort the data.\nWe use the `arrange` function to do this, and sort it by the `unemployment_rate` variable.\nBy default `arrange` sorts in ascending order, which is what we want here -- we're interested in the major with the *lowest* unemployment rate.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  arrange(unemployment_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 21\n    rank major_code major           major_category total sample_size   men women\n   <int>      <int> <chr>           <chr>          <int>       <int> <int> <int>\n 1    53       4005 Mathematics An… Computers & M…   609           7   500   109\n 2    74       3801 Military Techn… Industrial Ar…   124           4   124     0\n 3    84       3602 Botany          Biology & Lif…  1329           9   626   703\n 4   113       1106 Soil Science    Agriculture &…   685           4   476   209\n 5   121       2301 Educational Ad… Education        804           5   280   524\n 6    15       2409 Engineering Me… Engineering     4321          30  3526   795\n 7    20       3201 Court Reporting Law & Public …  1148          14   877   271\n 8   120       2305 Mathematics Te… Education      14237         123  3872 10365\n 9     1       2419 Petroleum Engi… Engineering     2339          36  2057   282\n10    65       1100 General Agricu… Agriculture &… 10399         158  6053  4346\n# ℹ 163 more rows\n# ℹ 13 more variables: sharewomen <dbl>, employed <int>,\n#   employed_fulltime <int>, employed_parttime <int>,\n#   employed_fulltime_yearround <int>, unemployed <int>,\n#   unemployment_rate <dbl>, p25th <dbl>, median <dbl>, p75th <dbl>,\n#   college_jobs <int>, non_college_jobs <int>, low_wage_jobs <int>\n```\n\n\n:::\n:::\n\n\nThis gives us what we wanted, but not in an ideal form.\nFirst, the name of the major barely fits on the page.\nSecond, some of the variables are not that useful (e.g. `major_code`, `major_category`) and some we might want front and center are not easily viewed (e.g. `unemployment_rate`).\n\nWe can use the `select` function to choose which variables to display, and in which order:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  arrange(unemployment_rate) %>%\n  select(rank, major, unemployment_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 3\n    rank major                                      unemployment_rate\n   <int> <chr>                                                  <dbl>\n 1    53 Mathematics And Computer Science                     0      \n 2    74 Military Technologies                                0      \n 3    84 Botany                                               0      \n 4   113 Soil Science                                         0      \n 5   121 Educational Administration And Supervision           0      \n 6    15 Engineering Mechanics Physics And Science            0.00633\n 7    20 Court Reporting                                      0.0117 \n 8   120 Mathematics Teacher Education                        0.0162 \n 9     1 Petroleum Engineering                                0.0184 \n10    65 General Agriculture                                  0.0196 \n# ℹ 163 more rows\n```\n\n\n:::\n:::\n\n\nOk, this is looking better, but do we really need to display all those decimal places in the unemployment variable?\nNot really!\n\nWe can use the `percent()` function to clean up the display a bit.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  arrange(unemployment_rate) %>%\n  select(rank, major, unemployment_rate) %>%\n  mutate(unemployment_rate = percent(unemployment_rate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 3\n    rank major                                      unemployment_rate\n   <int> <chr>                                      <chr>            \n 1    53 Mathematics And Computer Science           0.00000%         \n 2    74 Military Technologies                      0.00000%         \n 3    84 Botany                                     0.00000%         \n 4   113 Soil Science                               0.00000%         \n 5   121 Educational Administration And Supervision 0.00000%         \n 6    15 Engineering Mechanics Physics And Science  0.63343%         \n 7    20 Court Reporting                            1.16897%         \n 8   120 Mathematics Teacher Education              1.62028%         \n 9     1 Petroleum Engineering                      1.83805%         \n10    65 General Agriculture                        1.96425%         \n# ℹ 163 more rows\n```\n\n\n:::\n:::\n\n\n## Which major has the highest percentage of women?\n\nTo answer such a question we need to arrange the data in descending order.\nFor example, if earlier we were interested in the major with the highest unemployment rate, we would use the following:\n\n\n::: {.cell}\n\n```{.marginfigure .cell-code}\nThe `desc` function specifies that we want `unemployment_rate` in descending order.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  arrange(desc(unemployment_rate)) %>%\n  select(rank, major, unemployment_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 173 × 3\n    rank major                                      unemployment_rate\n   <int> <chr>                                                  <dbl>\n 1     6 Nuclear Engineering                                    0.177\n 2    90 Public Administration                                  0.159\n 3    85 Computer Networking And Telecommunications             0.152\n 4   171 Clinical Psychology                                    0.149\n 5    30 Public Policy                                          0.128\n 6   106 Communication Technologies                             0.120\n 7     2 Mining And Mineral Engineering                         0.117\n 8    54 Computer Programming And Data Processing               0.114\n 9    80 Geography                                              0.113\n10    59 Architecture                                           0.113\n# ℹ 163 more rows\n```\n\n\n:::\n:::\n\n\n1.  Using what you've learned so far, arrange the data in descending order with respect to proportion of women in a major, and display only the major, the total number of people with major, and proportion of women. Show only the top 3 majors by adding `top_n(3)` at the end of the pipeline.\n\n## How do the distributions of median income compare across major categories?\n\nNote:\nA percentile is a measure used in statistics indicating the value below which a given percentage of observations in a group of observations fall. For example, the 20th percentile is the value below which 20% of the observations may be found. (Source: [Wikipedia](https://en.wikipedia.org/wiki/Percentile)\n\n\nThere are three types of incomes reported in this data frame: `p25th`, `median`, and `p75th`.\nThese correspond to the 25th, 50th, and 75th percentiles of the income distribution of sampled individuals for a given major.\n\n2.  Why do we often choose the median, rather than the mean, to describe the typical income of a group of people?\n\nThe question we want to answer \"How do the distributions of median income compare across major categories?\".\nWe need to do a few things to answer this question: First, we need to group the data by `major_category`.\nThen, we need a way to summarize the distributions of median income within these groups.\nThis decision will depend on the shapes of these distributions.\nSo first, we need to visualize the data.\n\nWe use the `ggplot()` function to do this.\nThe first argument is the data frame, and the next argument gives the mapping of the variables of the data to the `aes`thetic elements of the plot.\n\nLet's start simple and take a look at the distribution of all median incomes, without considering the major categories.\n\n\n::: {.cell height='2'}\n\n```{.r .cell-code}\nggplot(data = college_recent_grads, mapping = aes(x = median)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](college-majors_files/figure-html/fig-1.png){width=672}\n:::\n:::\n\n\nAlong with the plot, we get a message:\n\n    `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\nThis is telling us that we might want to reconsider the binwidth we chose for our histogram -- or more accurately, the binwidth we didn't specify.\nIt's good practice to always think in the context of the data and try out a few binwidths before settling on a binwidth.\nYou might ask yourself: \"What would be a meaningful difference in median incomes?\" \\$1 is obviously too little, \\$10000 might be too high.\n\n3.  Try binwidths of \\$1000 and \\$5000 and choose one. Explain your reasoning for your choice. Note that the binwidth is an argument for the `geom_histogram` function. So to specify a binwidth of \\$1000, you would use `geom_histogram(binwidth = 1000)`.\n\nWe can also calculate summary statistics for this distribution using the `summarise` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  summarise(min = min(median), max = max(median),\n            mean = mean(median), med = median(median),\n            sd = sd(median), \n            q1 = quantile(median, probs = 0.25),\n            q3 = quantile(median, probs = 0.75))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 7\n    min    max   mean   med     sd    q1    q3\n  <dbl>  <dbl>  <dbl> <dbl>  <dbl> <dbl> <dbl>\n1 22000 110000 40151. 36000 11470. 33000 45000\n```\n\n\n:::\n:::\n\n\n4.  Based on the shape of the histogram you created in the previous exercise, determine which of these summary statistics is useful for describing the distribution.\n    Write up your description (remember shape, center, spread, any unusual observations) and include the summary statistic output as well.\n\n5.  Plot the distribution of `median` income using a histogram, faceted by `major_category`.\n    Use the `binwidth` you chose in the earlier exercise.\n\nNow that we've seen the shapes of the distributions of median incomes for each major category, we should have a better idea for which summary statistic to use to quantify the typical median income.\n\n6.  Which major category has the highest typical (you'll need to decide what this means) median income? Use the partial code below, filling it in with the appropriate statistic and function. Also note that we are looking for the highest statistic, so make sure to arrange in the correct direction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  group_by(major_category) %>%\n  summarise(___ = ___(median)) %>%\n  arrange(___)\n```\n:::\n\n\n7.  Which major category is the least popular in this sample? To answer this question we use a new function called `count`, which first groups the data and then counts the number of observations in each category (see below). Add to the pipeline appropriately to arrange the results so that the major with the lowest observations is on top.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  count(major_category)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 2\n   major_category                          n\n   <chr>                               <int>\n 1 Agriculture & Natural Resources        10\n 2 Arts                                    8\n 3 Biology & Life Science                 14\n 4 Business                               13\n 5 Communications & Journalism             4\n 6 Computers & Mathematics                11\n 7 Education                              16\n 8 Engineering                            29\n 9 Health                                 12\n10 Humanities & Liberal Arts              15\n11 Industrial Arts & Consumer Services     7\n12 Interdisciplinary                       1\n13 Law & Public Policy                     5\n14 Physical Sciences                      10\n15 Psychology & Social Work                9\n16 Social Science                          9\n```\n\n\n:::\n:::\n\n\n## All STEM fields aren't the same\n\nOne of the sections of the [FiveThirtyEight story](https://fivethirtyeight.com/features/the-economic-guide-to-picking-a-college-major/) is \"All STEM fields aren't the same\".\nLet's see if this is true.\n\nFirst, let's create a new vector called `stem_categories` that lists the major categories that are considered STEM fields.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstem_categories <- c(\"Biology & Life Science\",\n                     \"Computers & Mathematics\",\n                     \"Engineering\",\n                     \"Physical Sciences\")\n```\n:::\n\n\nThen, we can use this to create a new variable in our data frame indicating whether a major is STEM or not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads <- college_recent_grads %>%\n  mutate(major_type = ifelse(major_category %in% stem_categories, \"stem\", \"not stem\"))\n```\n:::\n\n\nLet's unpack this: with `mutate` we create a new variable called `major_type`, which is defined as `\"stem\"` if the `major_category` is in the vector called `stem_categories` we created earlier, and as `\"not stem\"` otherwise.\n\n`%in%` is a **logical operator**.\nOther logical operators that are commonly used are\n\n| Operator            | Operation                |\n|:--------------------|:-------------------------|\n| `x < y`             | less than                |\n| `x > y`             | greater than             |\n| `x <= y`            | less than or equal to    |\n| `x >= y`            | greater than or equal to |\n| `x != y`            | not equal to             |\n| `x == y`            | equal to                 |\n| `x %in% y`          | contains                 |\n| <code>x \\| y</code> | or                       |\n| `x & y`             | and                      |\n| `!x`                | not                      |\n\nWe can use the logical operators to also `filter` our data for STEM majors whose median earnings is less than median for all majors' median earnings, which we found to be \\$36,000 earlier.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollege_recent_grads %>%\n  filter(\n    major_type == \"stem\",\n    median < 36000\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 22\n    rank major_code major        major_category  total sample_size    men  women\n   <int>      <int> <chr>        <chr>           <int>       <int>  <int>  <int>\n 1    93       1301 Environment… Biology & Lif…  25965         225  10787  15178\n 2    98       5098 Multi-Disci… Physical Scie…  62052         427  27015  35037\n 3   102       3608 Physiology   Biology & Lif…  22060          99   8422  13638\n 4   106       2001 Communicati… Computers & M…  18035         208  11431   6604\n 5   109       3611 Neuroscience Biology & Lif…  13663          53   4944   8719\n 6   111       5002 Atmospheric… Physical Scie…   4043          32   2744   1299\n 7   123       3699 Miscellaneo… Biology & Lif…  10706          63   4747   5959\n 8   124       3600 Biology      Biology & Lif… 280709        1370 111762 168947\n 9   133       3604 Ecology      Biology & Lif…   9154          86   3878   5276\n10   169       3609 Zoology      Biology & Lif…   8409          47   3050   5359\n# ℹ 14 more variables: sharewomen <dbl>, employed <int>,\n#   employed_fulltime <int>, employed_parttime <int>,\n#   employed_fulltime_yearround <int>, unemployed <int>,\n#   unemployment_rate <dbl>, p25th <dbl>, median <dbl>, p75th <dbl>,\n#   college_jobs <int>, non_college_jobs <int>, low_wage_jobs <int>,\n#   major_type <chr>\n```\n\n\n:::\n:::\n\n\n8.  Which STEM majors have median salaries equal to or less than the median for all majors' median earnings? Your output should only show the major name and median, 25th percentile, and 75th percentile earning for that major as and should be sorted such that the major with the highest median earning is on top.\n\n\n## What types of majors do women tend to major in?\n\n9.  Create a scatterplot of median income vs. proportion of women in that major, coloured by whether the major is in a STEM field or not. Describe the association between these three variables.\n\n## Further exploration\n\n10. Ask a question of interest to you, and answer it using summary statistic(s) and/or visualization(s).\n\n",
    "supporting": [
      "college-majors_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
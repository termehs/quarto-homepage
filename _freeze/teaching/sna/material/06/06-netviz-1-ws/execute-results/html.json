{
  "hash": "c48b60261930741915695ed757173bbc",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor:  Termeh Shafie\ntitle: \"Social Network Analysis\"\nsubtitle: \"Worksheet 6: Network Visualization I\"\nlightbox: auto\ntoc: true\nformat:\n  html:\n    embed-resources: true\n    fig-width: 10\n    fig-height: 10\n---\n\n## Load Packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(igraph)\nlibrary(graphlayouts)\nlibrary(ggraph)\nlibrary(networkdata)\n```\n:::\n\n\n## Prepare data\n\n::: {.cell}\n\n```{.r .cell-code}\n# load the game of thrones dataset\ndata(got)\ngotS1 <- got[[1]]\n```\n:::\n\n\n\n## Basic plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(gotS1)\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/igraph_plot-1.png){width=960}\n:::\n:::\n\n\n:::{.callout-note}\nThis plot is not representative for the capabilities of igraph.\nCheck out [this tutorial](https://kateto.net/netscix2016.html)\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# quick plot function of ggraph\nautograph(gotS1)\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/ggraph_quickplot-1.png){width=960}\n:::\n:::\n\n\n`autograph()` allows you to specify node/edge colours too but it really is only meant to \ngive you a quick overview without writing a massive amount of code. Think of it as the\n`plot()` function for `ggraph`.\n\nBefore we continue, we add some more node attributes to the GoT network that can be used during visualization.\n\n::: {.cell}\n\n```{.r .cell-code}\n# define a custom color palette\ngot_palette <- c(\n  \"#1A5878\", \"#C44237\", \"#AD8941\", \"#E99093\",\n  \"#50594B\", \"#8968CD\", \"#9ACD32\"\n)\n\n# compute a clustering for node colors\nV(gotS1)$clu <- as.character(membership(cluster_louvain(gotS1)))\n\n# compute degree as node size\nV(gotS1)$size <- degree(gotS1)\n```\n:::\n\n\n### Aesthetics and scales examples \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = (size >= 25), label = name), size = 6) +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_width(range = c(0.2, 3)) +\n  scale_size(range = c(3, 12)) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_1-1.png){width=960}\n:::\n:::\n\n\nUsing geom_edge_link instead of geom_edge_link0 for gradients along edges\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link(aes(alpha = after_stat(index)), edge_colour = \"black\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_2-1.png){width=960}\n:::\n:::\n\n \n Using geom_edge_link2 instead of geom_edge_link0 for more advanced gradients along edges\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link2(aes(edge_colour = node.clu),edge_width = 0.5)+\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_color_manual(values = got_palette) +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_3-1.png){width=960}\n:::\n:::\n\n\nUsing a different geom\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_arc0(aes(edge_width = weight), edge_colour = \"grey66\",strength = 0.1) +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_width(range = c(0.2, 3)) +\n  scale_size(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_4-1.png){width=960}\n:::\n:::\n\n\nNot specifying any scales:\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_5-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"none\")+\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_6-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_width_continuous(range = c(0.2, 3), guide = \"none\") +\n  scale_size_continuous(range = c(1, 6), guide = \"none\") +\n  theme_graph() +\n  theme(legend.position = \"bottom\") +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_7-1.png){width=960}\n:::\n:::\n\n\n## Contentric layouts\n\nPlot that focuses on Ned Stark:\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"focus\", focus = 1) +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = (name == \"Ned\"), size = size, label = name),\n    family = \"serif\"\n  ) +\n  scale_edge_width_continuous(range = c(0.2, 1.2)) +\n  scale_size_continuous(range = c(1, 5)) +\n  scale_fill_manual(values = got_palette) +\n  theme_graph() +\n  theme(legend.position = \"none\") + \n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_8-1.png){width=960}\n:::\n:::\n\n \nAdding `draw_circle`:\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"focus\", focus = 2) +\n  draw_circle(col = \"#00BFFF\", use = \"focus\", max.circle = 3) +\n  geom_edge_link0(aes(width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = (name == \"Daenerys\"), size = size, label = name),\n    family = \"serif\"\n  ) +\n  scale_edge_width_continuous(range = c(0.2, 1.2)) +\n  scale_size_continuous(range = c(1, 5)) +\n  scale_fill_manual(values = got_palette) +\n  theme_graph() +\n  theme(legend.position = \"none\") + \n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_9-1.png){width=960}\n:::\n:::\n\n\nConcentric layout based on a centrality index:\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(gotS1, layout = \"centrality\", cent = strength(gotS1)) +\n  geom_edge_link0(aes(edge_width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(size = size, label = name), family = \"serif\") +\n  scale_edge_width_continuous(range = c(0.2, 0.9)) +\n  scale_size_continuous(range = c(1, 8)) +\n  scale_fill_manual(values = got_palette) +\n  theme_graph() +\n  theme(legend.position = \"none\") + \n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![](06-netviz-1-ws_files/figure-html/gotS1_10-1.png){width=960}\n:::\n:::\n\n\n\n## Exercise 1\nUse the network of a different season to produce a plot by yourself  \nOR choose a dataset from the networkdata package \n`data(package = \"networkdata\")`\n\nThere are no constrains, just try out and play around\n\n\n\n## Exercise 2\n\nRecreate the iconic \"polblogs\" network visualization\n\n\nThe network shows the linking between political blogs during the 2004 election in the US. Red nodes are conservative leaning blogs and blue ones liberal.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"polblogs\")\n```\n:::\n",
    "supporting": [
      "06-netviz-1-ws_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "1ac260fbb4a996d245879d297a770cc5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistical Learning - Lab Session 10\"\nformat: \n  html:\n    embed-resources: true \n---\n\n\n# Support Vector Machines\n\nWe use the `e1071` library in `R` to demonstrate the support vector classifier and the SVM. Another option is the `LiblineaR` library, which is useful for very large linear problems.\n\n## Support Vector Classifier\n\nThe `e1071` library contains implementations for a number of statistical learning methods. In particular, the `svm()` function can be used to fit a support vector classifier when the argument `kernel = \"linear\"` is used.\n\nA `cost` argument allows us to specify the cost of a violation to the margin. When the `cost` argument is small, then the margins will be wide and many support vectors will be on the margin or will violate the margin. When the `cost` argument is large, then the margins will be narrow and there will be few support vectors on the margin or violating the margin.\n\nWe now use the `svm()` function to fit the support vector classifier for a given value of the `cost` parameter. Here we demonstrate the use of this function on a two-dimensional example so that we can plot the resulting decision boundary. We begin by generating the observations, which belong to two classes, and checking whether the classes are linearly separable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(e1071)\nlibrary(ggplot2)\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'plotly'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1)\nx <- matrix(rnorm(20 * 2), ncol = 2)\ny <- c(rep(-1, 10), rep(1, 10))\nx[y == 1, ] <- x[y == 1, ] + 1\ndat <- data.frame(x = x, y = as.factor(y))\n\ndat %>% ggplot(aes(x = x.2, y = x.1, color = y)) + geom_point() + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk1-1.png){width=672}\n:::\n:::\n\n\nThey are not. Next, we fit the support vector classifier. Note that in order for the `svm()` function to perform classification (as opposed to SVM-based regression), we must encode the response as a factor variable. We now create a data frame with the response coded as a factor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"linear\", \n    cost = 10, scale = FALSE)\n```\n:::\n\n\nThe argument `scale = FALSE` tells the `svm()` function not to scale each feature to have mean zero or standard deviation one; depending on the application, one might prefer to use `scale = TRUE`.\n\nWe can now plot the support vector classifier obtained:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(svmfit, dat)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk3-1.png){width=672}\n:::\n:::\n\n\nUnfortunately the native plotting of svmfit is really old and unwieldy. Also it switches the order of input dimensions!\n\nBecause we cant actually recover the decision-boundary from svm() we have to resort to some tricks if we want a more modern visualization.\n\nKeep in mind that that for our binary classification the decision boundary is exactly at f(x) = 0.\n\nWe create a grid of (a lot of possible) x1,x2 values and predict using the fitted SVM. The resulting predictions are displayed as a contour-plot tracing 0 in the third dimension.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_boundary = function(data, svm_model) {\n  x1_seq <- seq(min(data$x.1), max(data$x.1), length.out = 100)\n  x2_seq <- seq(min(data$x.2), max(data$x.2), length.out = 100)\n  grid <- expand.grid(x.1 = x1_seq, x.2 = x2_seq)\n  grid$y <- predict(svm_model, grid)\n  \n  \n  ggplot(dat, aes(x = x.2, y = x.1, color = y)) +\n    geom_point(size = 3, alpha = 0.8) +\n    geom_contour(data = grid, aes(z = as.numeric(y)), breaks = 1.5,\n                 color = \"black\") +\n    theme_minimal() +\n    labs(title = \"SVM Decision Boundary with ggplot2\",\n         x = \"Feature 1 (x1)\",\n         y = \"Feature 2 (x2)\",\n         color = \"Class\")\n}\n\nplot_boundary(dat, svmfit)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nNote that the two arguments to the SVM `plot()` function are the output of the call to `svm()`, as well as the data used in the call to `svm()`. The region of feature space that will be assigned to the $-1$ class is shown in light yellow, and the region that will be assigned to the $+1$ class is shown in red. The decision boundary between the two classes is linear (because we used the argument `kernel = \"linear\"`), though due to the way in which the plotting function is implemented in this library the decision boundary looks somewhat jagged in the plot. (Note that here the second feature is plotted on the $x$-axis and the first feature is plotted on the $y$-axis, in contrast to the behavior of the usual `plot()` function in `R`.) The support vectors are plotted as crosses and the remaining observations are plotted as circles; we see here that there are seven support vectors. We can determine their identities as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit$index\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  1  2  5  7 14 16 17\n```\n\n\n:::\n:::\n\n\nWe can obtain some basic information about the support vector classifier fit using the `summary()` command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(svmfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvm(formula = y ~ ., data = dat, kernel = \"linear\", cost = 10, scale = FALSE)\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  linear \n       cost:  10 \n\nNumber of Support Vectors:  7\n\n ( 4 3 )\n\n\nNumber of Classes:  2 \n\nLevels: \n -1 1\n```\n\n\n:::\n:::\n\n\nThis tells us, for instance, that a linear kernel was used with `cost = 10`, and that there were seven support vectors, four in one class and three in the other.\n\nWhat if we instead used a smaller value of the cost parameter?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"linear\", \n    cost = 0.1, scale = FALSE)\nplot(svmfit, dat)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsvmfit$index\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  1  2  3  4  5  7  9 10 12 13 14 15 16 17 18 20\n```\n\n\n:::\n:::\n\n\nNow that a smaller value of the cost parameter is being used, we obtain a larger number of support vectors, because the margin is now wider. Unfortunately, the `svm()` function does not explicitly output the coefficients of the linear decision boundary obtained when the support vector classifier is fit, nor does it output the width of the margin.\n\nThe `e1071` library includes a built-in function, `tune()`, to perform cross-validation. By default, `tune()` performs ten-fold cross-validation on a set of models of interest. In order to use this function, we pass in relevant information about the set of models that are under consideration. The following command indicates that we want to compare SVMs with a linear kernel, using a range of values of the `cost` parameter.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\ntune.out <- tune(svm, y ~ ., data = dat, kernel = \"linear\", \n    ranges = list(cost = c(0.001, 0.01, 0.1, 1, 5, 10, 100)))\n```\n:::\n\n\nWe can easily access the cross-validation errors for each of these models using the `summary()` command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(tune.out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nParameter tuning of 'svm':\n\n- sampling method: 10-fold cross validation \n\n- best parameters:\n cost\n  0.1\n\n- best performance: 0.05 \n\n- Detailed performance results:\n   cost error dispersion\n1 1e-03  0.55  0.4377975\n2 1e-02  0.55  0.4377975\n3 1e-01  0.05  0.1581139\n4 1e+00  0.15  0.2415229\n5 5e+00  0.15  0.2415229\n6 1e+01  0.15  0.2415229\n7 1e+02  0.15  0.2415229\n```\n\n\n:::\n:::\n\n\nWe see that `cost = 0.1` results in the lowest cross-validation error rate. The `tune()` function stores the best model obtained, which can be accessed as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbestmod <- tune.out$best.model\nsummary(bestmod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nbest.tune(METHOD = svm, train.x = y ~ ., data = dat, ranges = list(cost = c(0.001, \n    0.01, 0.1, 1, 5, 10, 100)), kernel = \"linear\")\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  linear \n       cost:  0.1 \n\nNumber of Support Vectors:  16\n\n ( 8 8 )\n\n\nNumber of Classes:  2 \n\nLevels: \n -1 1\n```\n\n\n:::\n:::\n\n\nThe `predict()` function can be used to predict the class label on a set of test observations, at any given value of the cost parameter. We begin by generating a test data set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxtest <- matrix(rnorm(20 * 2), ncol = 2)\nytest <- sample(c(-1, 1), 20, rep = TRUE)\nxtest[ytest == 1, ] <- xtest[ytest == 1, ] + 1\ntestdat <- data.frame(x = xtest, y = as.factor(ytest))\n```\n:::\n\n\nNow we predict the class labels of these test observations. Here we use the best model obtained through cross-validation in order to make predictions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nypred <- predict(bestmod, testdat)\ntable(predict = ypred, truth = testdat$y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       truth\npredict -1 1\n     -1  9 1\n     1   2 8\n```\n\n\n:::\n:::\n\n\nThus, with this value of `cost`, 17 of the test observations are correctly classified. What if we had instead used `cost = 0.01`?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"linear\", \n    cost = .01, scale = FALSE)\nypred <- predict(svmfit, testdat)\ntable(predict = ypred, truth = testdat$y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       truth\npredict -1  1\n     -1 11  6\n     1   0  3\n```\n\n\n:::\n:::\n\n\nIn this case three additional observations are misclassified.\n\nNow consider a situation in which the two classes are linearly separable. Then we can find a separating hyperplane using the `svm()` function. We first further separate the two classes in our simulated data so that they are linearly separable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx[y == 1, ] <- x[y == 1, ] + 0.5\ndat <- data.frame(x = x, y = as.factor(y))\n\ndat %>% ggplot(aes(x=x.2, y=x.1, color = y)) + geom_point() + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk13-1.png){width=672}\n:::\n:::\n\n\nNow the observations are just barely linearly separable. We fit the support vector classifier and plot the resulting hyperplane, using a very large value of `cost` so that no observations are misclassified.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"linear\", \n    cost = 1e5)\nsummary(svmfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvm(formula = y ~ ., data = dat, kernel = \"linear\", cost = 1e+05)\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  linear \n       cost:  1e+05 \n\nNumber of Support Vectors:  3\n\n ( 1 2 )\n\n\nNumber of Classes:  2 \n\nLevels: \n -1 1\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(svmfit, dat)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_boundary(dat, svmfit)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk14-2.png){width=672}\n:::\n:::\n\n\nNo training errors were made and only three support vectors were used. However, we can see from the figure that the margin is very narrow (because the observations that are not support vectors, indicated as circles, are very close to the decision boundary). It seems likely that this model will perform poorly on test data. We now try a smaller value of `cost`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"linear\", cost = 1)\nsummary(svmfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvm(formula = y ~ ., data = dat, kernel = \"linear\", cost = 1)\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  linear \n       cost:  1 \n\nNumber of Support Vectors:  7\n\n ( 4 3 )\n\n\nNumber of Classes:  2 \n\nLevels: \n -1 1\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(svmfit, dat)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk15-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_boundary(dat, svmfit)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk15-2.png){width=672}\n:::\n:::\n\n\nUsing `cost = 1`, we misclassify a training observation, but we also obtain a much wider margin and make use of seven support vectors. It seems likely that this model will perform better on test data than the model with `cost = 1e5`.\n\n## Support Vector Machine\n\nIn order to fit an SVM using a non-linear kernel, we once again use the `svm()` function. However, now we use a different value of the parameter `kernel`. To fit an SVM with a polynomial kernel we use `kernel = \"polynomial\"`, and to fit an SVM with a radial kernel we use `kernel = \"radial\"`. In the former case we also use the `degree` argument to specify a degree for the polynomial kernel (this is $d$ in (9.22)), and in the latter case we use `gamma` to specify a value of $\\gamma$ for the radial basis kernel (9.24).\n\nWe first generate some data with a non-linear class boundary, as follows:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nx <- matrix(rnorm(200 * 2), ncol = 2)\nx[1:100, ] <- x[1:100, ] + 2\nx[101:150, ] <- x[101:150, ] - 2\ny <- c(rep(1, 150), rep(2, 50))\ndat <- data.frame(x = x, y = as.factor(y))\n```\n:::\n\n\nPlotting the data makes it clear that the class boundary is indeed non-linear:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat %>% ggplot(aes(x = x.2, y = x.1, color = y)) + geom_point() + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk17-1.png){width=672}\n:::\n:::\n\n\nThe data is randomly split into training and testing groups. We then fit the training data using the `svm()` function with a radial kernel and $\\gamma=1$:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain <- sample(200, 100)\nsvmfit <- svm(y ~ ., data = dat[train, ], kernel = \"radial\",  \n    gamma = 1, cost = 1)\nplot(svmfit, dat[train, ])\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_boundary(dat[train,], svmfit)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk18-2.png){width=672}\n:::\n:::\n\n\nThe plot shows that the resulting SVM has a decidedly non-linear boundary. The `summary()` function can be used to obtain some information about the SVM fit:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(svmfit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvm(formula = y ~ ., data = dat[train, ], kernel = \"radial\", gamma = 1, \n    cost = 1)\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  radial \n       cost:  1 \n\nNumber of Support Vectors:  31\n\n ( 16 15 )\n\n\nNumber of Classes:  2 \n\nLevels: \n 1 2\n```\n\n\n:::\n:::\n\n\nWe can see from the figure that there are a fair number of training errors in this SVM fit. If we increase the value of `cost`, we can reduce the number of training errors. However, this comes at the price of a more irregular decision boundary that seems to be at risk of overfitting the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat[train, ], kernel = \"radial\", \n    gamma = 1, cost = 1e5)\nplot(svmfit, dat[train, ])\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk20-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_boundary(dat[train,], svmfit)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk20-2.png){width=672}\n:::\n:::\n\n\nWe can perform cross-validation using `tune()` to select the best choice of $\\gamma$ and `cost` for an SVM with a radial kernel:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\ntune.out <- tune(svm, y ~ ., data = dat[train, ], \n    kernel = \"radial\", \n    ranges = list(\n      cost = c(0.1, 1, 10, 100, 1000),\n      gamma = c(0.5, 1, 2, 3, 4)\n    )\n  )\nsummary(tune.out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nParameter tuning of 'svm':\n\n- sampling method: 10-fold cross validation \n\n- best parameters:\n cost gamma\n    1   0.5\n\n- best performance: 0.07 \n\n- Detailed performance results:\n    cost gamma error dispersion\n1  1e-01   0.5  0.26 0.15776213\n2  1e+00   0.5  0.07 0.08232726\n3  1e+01   0.5  0.07 0.08232726\n4  1e+02   0.5  0.14 0.15055453\n5  1e+03   0.5  0.11 0.07378648\n6  1e-01   1.0  0.22 0.16193277\n7  1e+00   1.0  0.07 0.08232726\n8  1e+01   1.0  0.09 0.07378648\n9  1e+02   1.0  0.12 0.12292726\n10 1e+03   1.0  0.11 0.11005049\n11 1e-01   2.0  0.27 0.15670212\n12 1e+00   2.0  0.07 0.08232726\n13 1e+01   2.0  0.11 0.07378648\n14 1e+02   2.0  0.12 0.13165612\n15 1e+03   2.0  0.16 0.13498971\n16 1e-01   3.0  0.27 0.15670212\n17 1e+00   3.0  0.07 0.08232726\n18 1e+01   3.0  0.08 0.07888106\n19 1e+02   3.0  0.13 0.14181365\n20 1e+03   3.0  0.15 0.13540064\n21 1e-01   4.0  0.27 0.15670212\n22 1e+00   4.0  0.07 0.08232726\n23 1e+01   4.0  0.09 0.07378648\n24 1e+02   4.0  0.13 0.14181365\n25 1e+03   4.0  0.15 0.13540064\n```\n\n\n:::\n:::\n\n\nTherefore, the best choice of parameters involves `cost = 1` and `gamma = 0.5`. We can view the test set predictions for this model by applying the `predict()` function to the data. Notice that to do this we subset the dataframe `dat` using `-train` as an index set.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(\n    true = dat[-train, \"y\"], \n    pred = predict(\n      tune.out$best.model, newdata = dat[-train, ]\n      )\n    )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    pred\ntrue  1  2\n   1 67 10\n   2  2 21\n```\n\n\n:::\n:::\n\n\n$12 \\%$ of test observations are misclassified by this SVM.\n\n## ROC Curves\n\nThe `ROCR` package can be used to produce ROC curves such as those in Figures 9.10 and 9.11. We first write a short function to plot an ROC curve given a vector containing a numerical score for each observation, `pred`, and a vector containing the class label for each observation, `truth`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ROCR)\nrocplot <- function(pred, truth, ...) {\n  predob <- prediction(pred, truth)\n  perf <- performance(predob, \"tpr\", \"fpr\")\n  plot(perf, ...)\n}\n```\n:::\n\n\nSVMs and support vector classifiers output class labels for each observation. However, it is also possible to obtain *fitted values* for each observation, which are the numerical scores used to obtain the class labels. For instance, in the case of a support vector classifier, the fitted value for an observation $X= (X_1, X_2, \\ldots, X_p)^T$ takes the form $\\hat{\\beta}_0 + \\hat{\\beta}_1 X_1 + \\hat{\\beta}_2 X_2 + \\cdots + \\hat{\\beta}_p X_p$. For an SVM with a non-linear kernel, the equation that yields the fitted value is given in (9.23). In essence, the sign of the fitted value determines on which side of the decision boundary the observation lies. Therefore, the relationship between the fitted value and the class prediction for a given observation is simple: if the fitted value exceeds zero then the observation is assigned to one class, and if it is less than zero then it is assigned to the other. In order to obtain the fitted values for a given SVM model fit, we use `decision.values = TRUE` when fitting `svm()`. Then the `predict()` function will output the fitted values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit.opt <- svm(y ~ ., data = dat[train, ], \n    kernel = \"radial\", gamma = 2, cost = 1, \n    decision.values = T)\nfitted <- attributes(\n    predict(svmfit.opt, dat[train, ], decision.values = TRUE)\n  )$decision.values\n```\n:::\n\n\nNow we can produce the ROC plot. Note we use the negative of the fitted values so that negative values correspond to class 1 and positive values to class 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1, 2))\nrocplot(-fitted, dat[train, \"y\"], main = \"Training Data\")\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk25-1.png){width=672}\n:::\n:::\n\n\nSVM appears to be producing accurate predictions. By increasing $\\gamma$ we can produce a more flexible fit and generate further improvements in accuracy.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrocplot(-fitted, dat[train, \"y\"], main = \"Training Data\")\nsvmfit.flex <- svm(y ~ ., data = dat[train, ], \n    kernel = \"radial\", gamma = 50, cost = 1, \n    decision.values = T)\nfitted <- attributes(\n    predict(svmfit.flex, dat[train, ], decision.values = T)\n  )$decision.values\nrocplot(-fitted, dat[train, \"y\"], add = T, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk26-1.png){width=672}\n:::\n:::\n\n\nHowever, these ROC curves are all on the training data. We are really more interested in the level of prediction accuracy on the test data. When we compute the ROC curves on the test data, the model with $\\gamma=2$ appears to provide the most accurate results.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted <- attributes(\n    predict(svmfit.opt, dat[-train, ], decision.values = T)\n  )$decision.values\nrocplot(-fitted, dat[-train, \"y\"], main = \"Test Data\")\nfitted <- attributes(\n    predict(svmfit.flex, dat[-train, ], decision.values = T)\n  )$decision.values\nrocplot(-fitted, dat[-train, \"y\"], add = T, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk27-1.png){width=672}\n:::\n:::\n\n\n## SVM with Multiple Classes\n\nIf the response is a factor containing more than two levels, then the `svm()` function will perform multi-class classification using the one-versus-one approach. We explore that setting here by generating a third class of observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nx <- rbind(x, matrix(rnorm(50 * 2), ncol = 2))\ny <- c(y, rep(0, 50))\nx[y == 0, 2] <- x[y == 0, 2] + 2\ndat <- data.frame(x = x, y = as.factor(y))\ndat %>% ggplot(aes(x = x.2, y = x.1, color = y)) + geom_point() + theme_minimal()\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk28-1.png){width=672}\n:::\n:::\n\n\nWe now fit an SVM to the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsvmfit <- svm(y ~ ., data = dat, kernel = \"radial\", \n    cost = 10, gamma = 1)\nplot(svmfit, dat)\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk29-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot_boundary(dat, svmfit )\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/chunk29-2.png){width=672}\n:::\n:::\n\n\n## Application to Gene Expression Data\n\nWe now examine the `Khan` data set, which consists of a number of tissue samples corresponding to four distinct types of small round blue cell tumors. For each tissue sample, gene expression measurements are available. The data set consists of training data, `xtrain` and `ytrain`, and testing data, `xtest` and `ytest`.\n\nWe examine the dimension of the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ISLR2)\nKhan = Khan\nnames(Khan)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"xtrain\" \"xtest\"  \"ytrain\" \"ytest\" \n```\n\n\n:::\n\n```{.r .cell-code}\ndim(Khan$xtrain)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   63 2308\n```\n\n\n:::\n\n```{.r .cell-code}\ndim(Khan$xtest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   20 2308\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(Khan$ytrain)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 63\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(Khan$ytest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 20\n```\n\n\n:::\n:::\n\n\nThis data set consists of expression measurements for $2{,}308$ genes. The training and test sets consist of $63$ and $20$ observations respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(Khan$ytrain)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 1  2  3  4 \n 8 23 12 20 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(Khan$ytest)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n1 2 3 4 \n3 6 6 5 \n```\n\n\n:::\n:::\n\n\nWe will use a support vector approach to predict cancer subtype using gene expression measurements. In this data set, there are a very large number of features relative to the number of observations. This suggests that we should use a linear kernel, because the additional flexibility that will result from using a polynomial or radial kernel is unnecessary.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- data.frame(\n    x = Khan$xtrain, \n    y = as.factor(Khan$ytrain)\n  )\nout <- svm(y ~ ., data = dat, kernel = \"linear\", \n    cost = 10)\nsummary(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nsvm(formula = y ~ ., data = dat, kernel = \"linear\", cost = 10)\n\n\nParameters:\n   SVM-Type:  C-classification \n SVM-Kernel:  linear \n       cost:  10 \n\nNumber of Support Vectors:  58\n\n ( 20 20 11 7 )\n\n\nNumber of Classes:  4 \n\nLevels: \n 1 2 3 4\n```\n\n\n:::\n\n```{.r .cell-code}\ntable(out$fitted, dat$y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n     1  2  3  4\n  1  8  0  0  0\n  2  0 23  0  0\n  3  0  0 12  0\n  4  0  0  0 20\n```\n\n\n:::\n:::\n\n\nWe see that there are *no* training errors. In fact, this is not surprising, because the large number of variables relative to the number of observations implies that it is easy to find hyperplanes that fully separate the classes. We are most interested not in the support vector classifier's performance on the training observations, but rather its performance on the test observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat.te <- data.frame(\n    x = Khan$xtest, \n    y = as.factor(Khan$ytest))\npred.te <- predict(out, newdata = dat.te)\ntable(pred.te, dat.te$y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       \npred.te 1 2 3 4\n      1 3 0 0 0\n      2 0 6 2 0\n      3 0 0 4 0\n      4 0 0 0 5\n```\n\n\n:::\n:::\n\n\nWe see that using `cost = 10` yields two test set errors on this data.\n\n## Bonus: 3D visualization of decision boundaries\n\nBelow a visual demonstration of the RBF Kernel using the same data we used above for a nonlinear decision boundary. This won't properly display when rendered on html but I thought it would be fun to see in class and you can just recreate it with the code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nx <- matrix(rnorm(200 * 2), ncol = 2)\nx[1:100, ] <- x[1:100, ] + 2\nx[101:150, ] <- x[101:150, ] - 2\ny <- c(rep(1, 150), rep(2, 50))\ndat <- data.frame(x = x, y = as.factor(y))\n\n\ndat$z <- exp(-1 * (dat$x.1^2 + dat$x.2^2))  # RBF Kernel\n\nggplot(dat, aes(x = x.2, y = x.1, color = y)) +\n  geom_point(size = 2) +\n  labs(title = \"Nonlinear Data: Circular Decision Boundary\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](10_SVM_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_ly(dat, x = ~x.1, y = ~x.2, z = ~z, color = ~y,\n        colors = c(\"red\", \"blue\"), size = 3,\n        type = \"scatter3d\",\n        mode = \"markers\") %>%\n  layout(title = \"3D Visualization of Kernel Trick\",\n         scene = list(xaxis = list(title = \"x1\"),\n                      yaxis = list(title = \"x2\"),\n                      zaxis = list(title = \"Kernel Feature (z)\")))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-d2d093bff456136fb01e\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d2d093bff456136fb01e\">{\"x\":{\"visdat\":{\"936010536441\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"936010536441\",\"attrs\":{\"936010536441\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"color\":{},\"size\":3,\"colors\":[\"red\",\"blue\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"3D Visualization of Kernel Trick\",\"scene\":{\"xaxis\":{\"title\":\"x1\"},\"yaxis\":{\"title\":\"x2\"},\"zaxis\":{\"title\":\"Kernel Feature (z)\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1.3735461892576675,2.1836433242220821,1.1643713875899528,3.5952808021377916,2.3295077718153605,1.1795316158819849,2.4874290524284852,2.7383247051292172,2.5757813516534922,1.6946116128436439,3.511781168450848,2.3898432364114313,1.3787594194581962,-0.21469988717749988,3.1249309181431082,1.9550663909847692,1.9838097369010539,2.9438362106852991,2.8212211950980883,2.5939013212175088,2.9189773716082184,2.7821363007310671,2.0745649833651907,0.010648304136627207,2.6198257478947102,1.9438712604709991,1.8442044932946706,0.52924761610072557,1.5218499448913796,2.4179415601997025,3.3586795515290442,1.8972122726570044,2.387671611559369,1.9461949594170949,0.62294044317139341,1.5850054367003201,1.6057100462896507,1.9406866032888144,3.1000253719838833,2.7631757484575443,1.8354764037464131,1.7466383198634925,2.6969633754047373,2.5566631986736574,1.3112443054504801,1.2925048430378805,2.3645819621368305,2.7685329245154158,1.8876537878497719,2.8811077264542146,2.3981058803670683,1.3879736067492288,2.3411196914244248,0.87063690391920745,3.4330237017010372,3.9803998985058602,1.6327785235334908,0.95586537368346924,2.5697196274424128,1.8649453961191758,4.4016177605047764,1.9607599972668308,2.6897393624507768,2.0280021587806663,1.2567267911175946,2.188792299514343,0.19504137110896225,3.4655548615628859,2.1532533382118979,4.1726116703621532,2.4755095288996625,1.2900535690781854,2.610726353489055,1.0659023683557485,0.74636659976089792,2.291446235517463,1.556708126781567,2.0011053516316242,2.0743413241516642,1.4104790538119281,1.4313312671814979,1.8648213848761679,3.1780869965732044,0.476433199570238,2.5939461876284216,2.3329503712135184,3.0630998372763627,1.6958160763656993,2.3700188099162882,2.2670987907722311,1.4574799690083498,3.207867805983172,3.1604026156949514,2.700213649514998,3.5868334545408453,2.5584864255653041,0.72340779154196344,1.4267345857631137,0.77538738510164418,1.5265993635606885,-2.6203666772241241,-1.9578841268557647,-2.9109216485524456,-1.841971227595925,-2.6545846439188177,-0.23271273062735398,-1.2832925239827944,-1.0898257705047727,-1.6158146421736554,-0.31782391948058164,-2.6357364539489772,-2.461644730360566,-0.56771776145833708,-2.6506963533103667,-2.2073807436019655,-2.3928079294419837,-2.3199928685485069,-2.2791133029765591,-1.505811668732173,-2.1773304822696065,-2.5059574621142575,-0.65696117482958849,-2.2145794085468689,-2.1795565300433872,-2.1001907412135621,-1.2873336929485948,-2.0735644041263264,-2.0376341714670478,-2.6816604787556568,-2.3242702722463191,-1.9398395595654849,-2.5888944862596639,-1.4685038073674277,-3.5183940817867869,-1.6934421392102343,-3.5364498235375859,-2.3009761268366109,-2.5282799044450064,-2.6520947806809989,-2.0568967778473923,-3.9143594256800118,-0.82341668798143752,-3.6649724362120031,-2.4635304014723856,-3.1159201050428456,-2.7508190011934479,0.087166545628346803,-1.9826043803067483,-3.2863005304343256,-3.6406055344185786],\"y\":[2.409401839650934,3.6888732862040463,3.5865884334419702,1.6690921993172336,-0.28523553529246692,4.4976615898341645,2.6670661667654931,2.5413273359637003,1.9866004768540912,2.5101084229529267,1.8356241682303327,2.4206946432545129,1.5997532560223562,0.62979212245253957,2.9878382674548787,3.5197450254995455,1.6912594307743865,0.74671024439230882,2.6422413056778238,1.9552908631060208,0.26678159317516181,2.0021318596802695,1.3696996660718539,1.6590314201395948,0.84342763736414672,3.8031419079174666,1.6688679636087789,0.39448658774692258,2.1971934387394807,2.2631756464054735,1.0141732995907091,-0.88892067167954503,1.3595182974348852,2.5705076359204844,1.9402767239573899,1.9018212559947656,2.5608207286201159,0.81354136142052624,3.0967770442742433,1.9946559717218344,2.7073106673980787,3.0341077347374621,2.2234804149153042,1.1212923871339813,3.1629645559673305,-0.00016494478547546265,1.4552092599982753,1.7443292908430112,1.8338789632349939,3.0204639087841079,2.1362218931027774,2.4071676034238365,1.9303451869870951,1.7523356583806691,2.6955508066196403,3.1462283572158007,-0.40309621489187153,2.5727395552458407,2.3747244067786548,1.5747322784439237,2.9510128075768165,1.6107628182816212,1.7156693382004264,2.8574097780798033,3.7196272991206012,2.2700549009372288,1.5778159902123599,0.81088670514041494,1.6689670211209902,1.0601706734899787,1.741067416881215,2.394379168221572,1.1481429079761365,4.6491668810948799,2.1560116756650789,3.1302072674549426,-0.28912397984010552,2.7410011571954387,0.6837548395484383,2.9198036776091412,2.3981301554519563,1.592471420730228,3.3242586301772725,1.2987683307530804,1.4193856957594639,0.99892781897458138,1.3318213932466065,2.9451849533730825,2.4337021495451618,3.0051592176770434,1.6098813359463213,2.3763702917746481,2.2441649244864941,0.57374265761746179,3.778429287475451,2.134447660933676,2.7655989991578642,2.9551366769089817,1.9494342985577298,1.6941845802330291,-1.1063262975744868,-3.0472981490612954,-0.028662613775848333,-2.3836321062883621,-0.34585469772501054,-0.48778730604937048,-1.917034266414086,-1.4327790851485003,-3.0245484795344604,-1.6769934969775635,-0.95638754164381723,-1.9009215131028019,-2.4541369091543603,-2.6557818524504402,-2.0359224226225114,-0.93083853932320371,-2.4839749303012768,-2.1210101113274438,-3.294140003820841,-1.5056871639851437,-0.69209847988585427,-0.50295899059721672,-1.1852972691026435,-3.8697887902026125,-1.5179704958762401,-1.5438643966987979,-2.3534002858299115,-1.8295105290520182,-2.8640359541269036,-1.3207692259843442,-2.3271010146531044,-3.569082185143952,-2.3674507561704816,-0.63556507093015235,-2.3342813647311638,-1.267249957790898,-1.0534143598022139,-1.995601295673626,-2.352322305549849,-2.529695509133504,-1.2604107744252038,-3.0634574154828123,-1.7537891564636001,-2.289499366564312,-4.2648893564879433,-3.4088504560731936,-1.0839806712074265,-2.1912789505351995,-1.1967167838663526,-0.11252553669139531],\"z\":[0.00045653446659078432,1.0456058256132096e-08,6.6773308331456434e-07,1.501076976653205e-07,0.0040543464753634304,4.077957785796035e-10,1.6735804764073198e-06,8.6826678003532074e-07,2.5388073888257558e-05,0.00010387183097010262,1.5158443173121415e-07,9.4347276026620245e-06,0.011560189572134056,0.64227792816435869,7.620904636188128e-09,9.1138123758745818e-08,0.0011183962556903005,9.8668202710034046e-05,3.2458183354394639e-07,2.6154575183003942e-05,0.00018565855177866625,7.898684120485157e-06,0.0020706410255974294,0.063768327925559448,0.00051319373716149678,1.1950127979517073e-08,0.002057609322745423,0.64679705332735049,0.00078983518408799237,1.7237808895683008e-05,4.509718553156475e-06,0.012405760372628874,0.00052649657812097253,3.0579389356441768e-05,0.015721460938669645,0.0021783962803451893,0.00010770575315550507,0.011936981138869672,4.5863315046759663e-09,9.0405308549692187e-06,2.257867506085456e-05,4.7538527358022322e-06,4.9433041019874576e-06,0.00041227360925554684,8.0995147063102842e-06,0.18814002181580761,0.00044882304993132936,2.2377395702800658e-05,0.00098157819889444528,2.7093175815394688e-08,3.3153714709030916e-05,0.00044344951137872008,0.00010032717620446433,0.021738098250388967,5.320780214373022e-09,6.6106691925332697e-12,0.059104260625156169,0.0005353084518281352,4.8198151955307205e-06,0.0025855860645797083,6.3654867936989116e-13,0.0015977855755676374,3.7988802376778209e-05,4.6549313455411395e-06,2.0200175087677884e-07,4.8016733958203461e-05,0.079854868515655805,3.1515765222408735e-06,0.00059798143113458857,8.9228538019273222e-09,0.00010521936698398557,0.00061291161773245032,0.0002933558355681659,1.3164653539283694e-10,0.0054865839588545632,2.9129673323042804e-07,0.081517882330400165,9.9542598570655444e-06,0.0084768817947105824,2.7134497286094317e-05,0.00040984257357127419,0.0024454551368601521,6.5202879028642034e-10,0.14752055298771902,0.00015954052741501466,0.0015955859840980113,1.4284595535232449e-05,9.6369433987844127e-06,9.7339059164314565e-06,7.010274090761607e-07,0.0089512170214558207,1.1978688584915923e-07,2.9852238909385669e-07,0.00049037782615573558,1.6308787905804896e-12,1.5086358892147972e-05,0.00028249303656568075,2.1054329175754226e-05,0.012258696428027547,0.005512334790016794,0.00030650410797853858,2.0060634005483792e-06,0.00020876812128715121,0.00011454302728394107,0.00077207018128739539,0.74670008213815398,0.0048836612673617578,0.039141338615544481,7.8205907489447196e-06,0.054295212001443854,0.00038518616908503095,6.2948263861992715e-05,0.0017553422522523095,7.6808271693347857e-07,0.00012126772440601352,0.001371308105049649,9.6119988043527087e-06,6.1711433260602775e-05,2.0070849815655921e-06,0.00090474098033019464,0.0011605942648179608,0.50430918764470534,0.0018193216395369916,2.7115865015238419e-09,0.0012125428739367733,0.01758436168771562,5.3375311871645204e-05,0.00055360352147099524,2.0628546606171331e-07,0.00078748703825768599,0.00010324800490593903,3.6057995367370596e-09,0.00042589125461246427,2.8079949390393794e-06,0.00024442164553148789,7.4312630759001166e-07,0.0016546381249029295,3.1214625513889278e-05,3.4850542230107009e-06,2.4175188395921935e-05,4.5259871599550254e-08,4.2637074978580343e-05,6.7725750766411557e-08,1.2240145563878447e-05,7.6550601357619697e-13,4.6459655890678136e-09,0.30647714250464331,0.00016127113068433482,4.8725056932483642e-06,1.7312434443986485e-06],\"mode\":\"markers\",\"type\":\"scatter3d\",\"name\":\"1\",\"marker\":{\"color\":\"rgba(255,0,0,1)\",\"size\":[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],\"sizemode\":\"area\",\"line\":{\"color\":\"rgba(255,0,0,1)\"}},\"textfont\":{\"color\":\"rgba(255,0,0,1)\",\"size\":55},\"error_y\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"line\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"frame\":null},{\"x\":[0.45018710127265554,-0.018559832714637983,-0.3180683745438444,-0.92936214745370238,-1.4874603101414847,-1.0751922966156808,1.0000288037139142,-0.62126669479682339,-1.3844268473844914,1.8692906224235806,0.42510037737244788,-0.23864710091303276,1.05848304870902,0.88642265137493592,-0.61924304823114706,2.2061024645404674,-0.25502703014101524,-1.4244946502128084,-0.14439960195421941,0.20753833923234477,2.3079783990593614,0.10580236789371146,0.45699880542341353,-0.077152935356530977,-0.33400084236654448,-0.034726028311276191,0.78763960563016178,2.0752450086522849,1.0273924387637681,1.2079083983867038,-1.231323421558044,0.98389557005337913,0.21992480366065129,-1.4672500290922426,0.52102274264813875,-0.15875460471601599,1.4645873119697974,-0.76608199960466483,-0.43021175392854655,-0.9261094973774372,-0.17710396143654025,0.40201177948633787,-0.73174817311960638,0.83037316798167382,-1.208082786304465,-1.0479844128077416,1.4411577068442809,-1.015847465304649,0.41197471231751487,-0.38107605110891962],\"y\":[1.4738811811091381,0.67726849231299835,0.37996268656674459,-0.192798426457334,1.5778917949043996,0.59623410931845389,-1.1735769408713594,-0.15564253489031818,-1.9189098202698407,-0.1952588461106366,-2.5923276699459867,1.3140021671980533,-0.63554300103213524,-0.42997883869418801,-0.16931833230196294,0.61221817398912814,0.67834017722269979,0.56795197247167184,-0.57254260392612566,-1.3632912562783401,-0.3887222443379007,0.27791413245054292,-0.82308112157202451,-0.068840934478464594,-1.1676623261297989,-0.0083090142156067998,0.12885540159740508,-0.14587562846100258,-0.16391095673606826,1.7635520027849219,0.76258651241831832,1.111431080730634,-0.92320695282983112,0.16434183842795594,1.1548251870972732,-0.056521424526489797,-2.1293606482346514,0.34484576209945589,-1.9049554455855295,-0.81117015314021712,1.324004321299602,0.61563684930267437,1.0916689555353609,0.30660486151363225,-0.11015876248285665,-0.92431277312728399,1.5929137537191953,0.045010598121880303,-0.71512840066788252,0.86522309971713784],\"z\":[0.093015032214099055,0.63189181513597892,0.78228266929231827,0.40620990956146663,0.0090745572248394166,0.22057145275405562,0.092797048523218406,0.66351958712694015,0.0037021091023013383,0.029235444646954316,0.0010069059365316662,0.16803984851294587,0.21777316823943929,0.37884545837697647,0.66223774874914076,0.0052912584105281064,0.59144642046867868,0.095201988336113999,0.70563563083098879,0.14932424272519057,0.0041782228691545718,0.91536681249536433,0.41217368998141812,0.98936530283969915,0.22878058689470709,0.99872587562707582,0.52888732666703719,0.01319494410757272,0.33878078761590397,0.010366681004245336,0.12273894746254893,0.11043484830791074,0.40629410014832185,0.11306064896693244,0.20087229700674686,0.9720017287741588,0.0012567920902154031,0.49371333203559509,0.022061144111400113,0.21965968460003699,0.16790561784700475,0.58238577856816776,0.17778212463037482,0.45679245438074328,0.22955813465468375,0.14190103058965653,0.009909020621848761,0.35559173191009491,0.50604393113881685,0.40908596198822023],\"mode\":\"markers\",\"type\":\"scatter3d\",\"name\":\"2\",\"marker\":{\"color\":\"rgba(0,0,255,1)\",\"size\":[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],\"sizemode\":\"area\",\"line\":{\"color\":\"rgba(0,0,255,1)\"}},\"textfont\":{\"color\":\"rgba(0,0,255,1)\",\"size\":55},\"error_y\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"line\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define hyperplane parameters\nm_x <- 0   # Slope in the x1 direction\nm_y <- 0  # Slope in the x2 direction\nb <- 0.11    # Offset\n\n# Create a grid for x1 and x2\nx1_seq <- seq(-4, 4, length.out = 50)\nx2_seq <- seq(-4, 4, length.out = 50)\ngrid <- expand.grid(x1 = x1_seq, x2 = x2_seq)\n\n# Compute z values for the hyperplane\ngrid$z <- m_x * grid$x1 + m_y * grid$x2 + b\n\n\n\nplot_ly(dat, x = ~x.1, y = ~x.2, z = ~z, color = ~y,\n        colors = c(\"red\", \"blue\"), size = 3,\n        type = \"scatter3d\", mode = \"markers\") %>%\n  \n  add_surface(x = ~x1_seq, y = ~x2_seq, \n              z = matrix(grid$z, nrow = length(x1_seq), ncol = length(x2_seq)),\n              opacity = 0.5) %>%\n  layout(title = \"Linear Hyperplane as decision boundary\",\n         scene = list(xaxis = list(title = \"x1\"),\n                      yaxis = list(title = \"x2\"),\n                      zaxis = list(title = \"Kernel Feature (z)\")))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: 'surface' objects don't have these attributes: 'mode'\nValid attributes include:\n'_deprecated', 'autocolorscale', 'cauto', 'cmax', 'cmid', 'cmin', 'coloraxis', 'colorbar', 'colorscale', 'connectgaps', 'contours', 'customdata', 'customdatasrc', 'hidesurface', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'lighting', 'lightposition', 'meta', 'metasrc', 'name', 'opacity', 'opacityscale', 'reversescale', 'scene', 'showlegend', 'showscale', 'stream', 'surfacecolor', 'surfacecolorsrc', 'text', 'textsrc', 'type', 'uid', 'uirevision', 'visible', 'x', 'xcalendar', 'xhoverformat', 'xsrc', 'y', 'ycalendar', 'yhoverformat', 'ysrc', 'z', 'zcalendar', 'zhoverformat', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\nWarning: 'surface' objects don't have these attributes: 'mode'\nValid attributes include:\n'_deprecated', 'autocolorscale', 'cauto', 'cmax', 'cmid', 'cmin', 'coloraxis', 'colorbar', 'colorscale', 'connectgaps', 'contours', 'customdata', 'customdatasrc', 'hidesurface', 'hoverinfo', 'hoverinfosrc', 'hoverlabel', 'hovertemplate', 'hovertemplatesrc', 'hovertext', 'hovertextsrc', 'ids', 'idssrc', 'legendgroup', 'legendgrouptitle', 'legendrank', 'lighting', 'lightposition', 'meta', 'metasrc', 'name', 'opacity', 'opacityscale', 'reversescale', 'scene', 'showlegend', 'showscale', 'stream', 'surfacecolor', 'surfacecolorsrc', 'text', 'textsrc', 'type', 'uid', 'uirevision', 'visible', 'x', 'xcalendar', 'xhoverformat', 'xsrc', 'y', 'ycalendar', 'yhoverformat', 'ysrc', 'z', 'zcalendar', 'zhoverformat', 'zsrc', 'key', 'set', 'frame', 'transforms', '_isNestedKey', '_isSimpleKey', '_isGraticule', '_bbox'\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-841a60c03cdce1b72393\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-841a60c03cdce1b72393\">{\"x\":{\"visdat\":{\"936074d89f8e\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"936074d89f8e\",\"attrs\":{\"936074d89f8e\":{\"x\":{},\"y\":{},\"z\":{},\"mode\":\"markers\",\"color\":{},\"size\":3,\"colors\":[\"red\",\"blue\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\"},\"936074d89f8e.1\":{\"x\":{},\"y\":{},\"zmode\":\"markers\",\"color\":{},\"size\":3,\"colors\":[\"red\",\"blue\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"surface\",\"opacity\":0.5,\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"title\":\"Linear Hyperplane as decision boundary\",\"scene\":{\"xaxis\":{\"title\":\"x1\"},\"yaxis\":{\"title\":\"x2\"},\"zaxis\":{\"title\":\"Kernel Feature (z)\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1.3735461892576675,2.1836433242220821,1.1643713875899528,3.5952808021377916,2.3295077718153605,1.1795316158819849,2.4874290524284852,2.7383247051292172,2.5757813516534922,1.6946116128436439,3.511781168450848,2.3898432364114313,1.3787594194581962,-0.21469988717749988,3.1249309181431082,1.9550663909847692,1.9838097369010539,2.9438362106852991,2.8212211950980883,2.5939013212175088,2.9189773716082184,2.7821363007310671,2.0745649833651907,0.010648304136627207,2.6198257478947102,1.9438712604709991,1.8442044932946706,0.52924761610072557,1.5218499448913796,2.4179415601997025,3.3586795515290442,1.8972122726570044,2.387671611559369,1.9461949594170949,0.62294044317139341,1.5850054367003201,1.6057100462896507,1.9406866032888144,3.1000253719838833,2.7631757484575443,1.8354764037464131,1.7466383198634925,2.6969633754047373,2.5566631986736574,1.3112443054504801,1.2925048430378805,2.3645819621368305,2.7685329245154158,1.8876537878497719,2.8811077264542146,2.3981058803670683,1.3879736067492288,2.3411196914244248,0.87063690391920745,3.4330237017010372,3.9803998985058602,1.6327785235334908,0.95586537368346924,2.5697196274424128,1.8649453961191758,4.4016177605047764,1.9607599972668308,2.6897393624507768,2.0280021587806663,1.2567267911175946,2.188792299514343,0.19504137110896225,3.4655548615628859,2.1532533382118979,4.1726116703621532,2.4755095288996625,1.2900535690781854,2.610726353489055,1.0659023683557485,0.74636659976089792,2.291446235517463,1.556708126781567,2.0011053516316242,2.0743413241516642,1.4104790538119281,1.4313312671814979,1.8648213848761679,3.1780869965732044,0.476433199570238,2.5939461876284216,2.3329503712135184,3.0630998372763627,1.6958160763656993,2.3700188099162882,2.2670987907722311,1.4574799690083498,3.207867805983172,3.1604026156949514,2.700213649514998,3.5868334545408453,2.5584864255653041,0.72340779154196344,1.4267345857631137,0.77538738510164418,1.5265993635606885,-2.6203666772241241,-1.9578841268557647,-2.9109216485524456,-1.841971227595925,-2.6545846439188177,-0.23271273062735398,-1.2832925239827944,-1.0898257705047727,-1.6158146421736554,-0.31782391948058164,-2.6357364539489772,-2.461644730360566,-0.56771776145833708,-2.6506963533103667,-2.2073807436019655,-2.3928079294419837,-2.3199928685485069,-2.2791133029765591,-1.505811668732173,-2.1773304822696065,-2.5059574621142575,-0.65696117482958849,-2.2145794085468689,-2.1795565300433872,-2.1001907412135621,-1.2873336929485948,-2.0735644041263264,-2.0376341714670478,-2.6816604787556568,-2.3242702722463191,-1.9398395595654849,-2.5888944862596639,-1.4685038073674277,-3.5183940817867869,-1.6934421392102343,-3.5364498235375859,-2.3009761268366109,-2.5282799044450064,-2.6520947806809989,-2.0568967778473923,-3.9143594256800118,-0.82341668798143752,-3.6649724362120031,-2.4635304014723856,-3.1159201050428456,-2.7508190011934479,0.087166545628346803,-1.9826043803067483,-3.2863005304343256,-3.6406055344185786],\"y\":[2.409401839650934,3.6888732862040463,3.5865884334419702,1.6690921993172336,-0.28523553529246692,4.4976615898341645,2.6670661667654931,2.5413273359637003,1.9866004768540912,2.5101084229529267,1.8356241682303327,2.4206946432545129,1.5997532560223562,0.62979212245253957,2.9878382674548787,3.5197450254995455,1.6912594307743865,0.74671024439230882,2.6422413056778238,1.9552908631060208,0.26678159317516181,2.0021318596802695,1.3696996660718539,1.6590314201395948,0.84342763736414672,3.8031419079174666,1.6688679636087789,0.39448658774692258,2.1971934387394807,2.2631756464054735,1.0141732995907091,-0.88892067167954503,1.3595182974348852,2.5705076359204844,1.9402767239573899,1.9018212559947656,2.5608207286201159,0.81354136142052624,3.0967770442742433,1.9946559717218344,2.7073106673980787,3.0341077347374621,2.2234804149153042,1.1212923871339813,3.1629645559673305,-0.00016494478547546265,1.4552092599982753,1.7443292908430112,1.8338789632349939,3.0204639087841079,2.1362218931027774,2.4071676034238365,1.9303451869870951,1.7523356583806691,2.6955508066196403,3.1462283572158007,-0.40309621489187153,2.5727395552458407,2.3747244067786548,1.5747322784439237,2.9510128075768165,1.6107628182816212,1.7156693382004264,2.8574097780798033,3.7196272991206012,2.2700549009372288,1.5778159902123599,0.81088670514041494,1.6689670211209902,1.0601706734899787,1.741067416881215,2.394379168221572,1.1481429079761365,4.6491668810948799,2.1560116756650789,3.1302072674549426,-0.28912397984010552,2.7410011571954387,0.6837548395484383,2.9198036776091412,2.3981301554519563,1.592471420730228,3.3242586301772725,1.2987683307530804,1.4193856957594639,0.99892781897458138,1.3318213932466065,2.9451849533730825,2.4337021495451618,3.0051592176770434,1.6098813359463213,2.3763702917746481,2.2441649244864941,0.57374265761746179,3.778429287475451,2.134447660933676,2.7655989991578642,2.9551366769089817,1.9494342985577298,1.6941845802330291,-1.1063262975744868,-3.0472981490612954,-0.028662613775848333,-2.3836321062883621,-0.34585469772501054,-0.48778730604937048,-1.917034266414086,-1.4327790851485003,-3.0245484795344604,-1.6769934969775635,-0.95638754164381723,-1.9009215131028019,-2.4541369091543603,-2.6557818524504402,-2.0359224226225114,-0.93083853932320371,-2.4839749303012768,-2.1210101113274438,-3.294140003820841,-1.5056871639851437,-0.69209847988585427,-0.50295899059721672,-1.1852972691026435,-3.8697887902026125,-1.5179704958762401,-1.5438643966987979,-2.3534002858299115,-1.8295105290520182,-2.8640359541269036,-1.3207692259843442,-2.3271010146531044,-3.569082185143952,-2.3674507561704816,-0.63556507093015235,-2.3342813647311638,-1.267249957790898,-1.0534143598022139,-1.995601295673626,-2.352322305549849,-2.529695509133504,-1.2604107744252038,-3.0634574154828123,-1.7537891564636001,-2.289499366564312,-4.2648893564879433,-3.4088504560731936,-1.0839806712074265,-2.1912789505351995,-1.1967167838663526,-0.11252553669139531],\"z\":[0.00045653446659078432,1.0456058256132096e-08,6.6773308331456434e-07,1.501076976653205e-07,0.0040543464753634304,4.077957785796035e-10,1.6735804764073198e-06,8.6826678003532074e-07,2.5388073888257558e-05,0.00010387183097010262,1.5158443173121415e-07,9.4347276026620245e-06,0.011560189572134056,0.64227792816435869,7.620904636188128e-09,9.1138123758745818e-08,0.0011183962556903005,9.8668202710034046e-05,3.2458183354394639e-07,2.6154575183003942e-05,0.00018565855177866625,7.898684120485157e-06,0.0020706410255974294,0.063768327925559448,0.00051319373716149678,1.1950127979517073e-08,0.002057609322745423,0.64679705332735049,0.00078983518408799237,1.7237808895683008e-05,4.509718553156475e-06,0.012405760372628874,0.00052649657812097253,3.0579389356441768e-05,0.015721460938669645,0.0021783962803451893,0.00010770575315550507,0.011936981138869672,4.5863315046759663e-09,9.0405308549692187e-06,2.257867506085456e-05,4.7538527358022322e-06,4.9433041019874576e-06,0.00041227360925554684,8.0995147063102842e-06,0.18814002181580761,0.00044882304993132936,2.2377395702800658e-05,0.00098157819889444528,2.7093175815394688e-08,3.3153714709030916e-05,0.00044344951137872008,0.00010032717620446433,0.021738098250388967,5.320780214373022e-09,6.6106691925332697e-12,0.059104260625156169,0.0005353084518281352,4.8198151955307205e-06,0.0025855860645797083,6.3654867936989116e-13,0.0015977855755676374,3.7988802376778209e-05,4.6549313455411395e-06,2.0200175087677884e-07,4.8016733958203461e-05,0.079854868515655805,3.1515765222408735e-06,0.00059798143113458857,8.9228538019273222e-09,0.00010521936698398557,0.00061291161773245032,0.0002933558355681659,1.3164653539283694e-10,0.0054865839588545632,2.9129673323042804e-07,0.081517882330400165,9.9542598570655444e-06,0.0084768817947105824,2.7134497286094317e-05,0.00040984257357127419,0.0024454551368601521,6.5202879028642034e-10,0.14752055298771902,0.00015954052741501466,0.0015955859840980113,1.4284595535232449e-05,9.6369433987844127e-06,9.7339059164314565e-06,7.010274090761607e-07,0.0089512170214558207,1.1978688584915923e-07,2.9852238909385669e-07,0.00049037782615573558,1.6308787905804896e-12,1.5086358892147972e-05,0.00028249303656568075,2.1054329175754226e-05,0.012258696428027547,0.005512334790016794,0.00030650410797853858,2.0060634005483792e-06,0.00020876812128715121,0.00011454302728394107,0.00077207018128739539,0.74670008213815398,0.0048836612673617578,0.039141338615544481,7.8205907489447196e-06,0.054295212001443854,0.00038518616908503095,6.2948263861992715e-05,0.0017553422522523095,7.6808271693347857e-07,0.00012126772440601352,0.001371308105049649,9.6119988043527087e-06,6.1711433260602775e-05,2.0070849815655921e-06,0.00090474098033019464,0.0011605942648179608,0.50430918764470534,0.0018193216395369916,2.7115865015238419e-09,0.0012125428739367733,0.01758436168771562,5.3375311871645204e-05,0.00055360352147099524,2.0628546606171331e-07,0.00078748703825768599,0.00010324800490593903,3.6057995367370596e-09,0.00042589125461246427,2.8079949390393794e-06,0.00024442164553148789,7.4312630759001166e-07,0.0016546381249029295,3.1214625513889278e-05,3.4850542230107009e-06,2.4175188395921935e-05,4.5259871599550254e-08,4.2637074978580343e-05,6.7725750766411557e-08,1.2240145563878447e-05,7.6550601357619697e-13,4.6459655890678136e-09,0.30647714250464331,0.00016127113068433482,4.8725056932483642e-06,1.7312434443986485e-06],\"mode\":\"markers\",\"type\":\"scatter3d\",\"name\":\"1\",\"marker\":{\"color\":\"rgba(255,0,0,1)\",\"size\":[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],\"sizemode\":\"area\",\"line\":{\"color\":\"rgba(255,0,0,1)\"}},\"textfont\":{\"color\":\"rgba(255,0,0,1)\",\"size\":55},\"error_y\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"line\":{\"color\":\"rgba(255,0,0,1)\",\"width\":55},\"frame\":null},{\"x\":[0.45018710127265554,-0.018559832714637983,-0.3180683745438444,-0.92936214745370238,-1.4874603101414847,-1.0751922966156808,1.0000288037139142,-0.62126669479682339,-1.3844268473844914,1.8692906224235806,0.42510037737244788,-0.23864710091303276,1.05848304870902,0.88642265137493592,-0.61924304823114706,2.2061024645404674,-0.25502703014101524,-1.4244946502128084,-0.14439960195421941,0.20753833923234477,2.3079783990593614,0.10580236789371146,0.45699880542341353,-0.077152935356530977,-0.33400084236654448,-0.034726028311276191,0.78763960563016178,2.0752450086522849,1.0273924387637681,1.2079083983867038,-1.231323421558044,0.98389557005337913,0.21992480366065129,-1.4672500290922426,0.52102274264813875,-0.15875460471601599,1.4645873119697974,-0.76608199960466483,-0.43021175392854655,-0.9261094973774372,-0.17710396143654025,0.40201177948633787,-0.73174817311960638,0.83037316798167382,-1.208082786304465,-1.0479844128077416,1.4411577068442809,-1.015847465304649,0.41197471231751487,-0.38107605110891962],\"y\":[1.4738811811091381,0.67726849231299835,0.37996268656674459,-0.192798426457334,1.5778917949043996,0.59623410931845389,-1.1735769408713594,-0.15564253489031818,-1.9189098202698407,-0.1952588461106366,-2.5923276699459867,1.3140021671980533,-0.63554300103213524,-0.42997883869418801,-0.16931833230196294,0.61221817398912814,0.67834017722269979,0.56795197247167184,-0.57254260392612566,-1.3632912562783401,-0.3887222443379007,0.27791413245054292,-0.82308112157202451,-0.068840934478464594,-1.1676623261297989,-0.0083090142156067998,0.12885540159740508,-0.14587562846100258,-0.16391095673606826,1.7635520027849219,0.76258651241831832,1.111431080730634,-0.92320695282983112,0.16434183842795594,1.1548251870972732,-0.056521424526489797,-2.1293606482346514,0.34484576209945589,-1.9049554455855295,-0.81117015314021712,1.324004321299602,0.61563684930267437,1.0916689555353609,0.30660486151363225,-0.11015876248285665,-0.92431277312728399,1.5929137537191953,0.045010598121880303,-0.71512840066788252,0.86522309971713784],\"z\":[0.093015032214099055,0.63189181513597892,0.78228266929231827,0.40620990956146663,0.0090745572248394166,0.22057145275405562,0.092797048523218406,0.66351958712694015,0.0037021091023013383,0.029235444646954316,0.0010069059365316662,0.16803984851294587,0.21777316823943929,0.37884545837697647,0.66223774874914076,0.0052912584105281064,0.59144642046867868,0.095201988336113999,0.70563563083098879,0.14932424272519057,0.0041782228691545718,0.91536681249536433,0.41217368998141812,0.98936530283969915,0.22878058689470709,0.99872587562707582,0.52888732666703719,0.01319494410757272,0.33878078761590397,0.010366681004245336,0.12273894746254893,0.11043484830791074,0.40629410014832185,0.11306064896693244,0.20087229700674686,0.9720017287741588,0.0012567920902154031,0.49371333203559509,0.022061144111400113,0.21965968460003699,0.16790561784700475,0.58238577856816776,0.17778212463037482,0.45679245438074328,0.22955813465468375,0.14190103058965653,0.009909020621848761,0.35559173191009491,0.50604393113881685,0.40908596198822023],\"mode\":\"markers\",\"type\":\"scatter3d\",\"name\":\"2\",\"marker\":{\"color\":\"rgba(0,0,255,1)\",\"size\":[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55],\"sizemode\":\"area\",\"line\":{\"color\":\"rgba(0,0,255,1)\"}},\"textfont\":{\"color\":\"rgba(0,0,255,1)\",\"size\":55},\"error_y\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"error_x\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"line\":{\"color\":\"rgba(0,0,255,1)\",\"width\":55},\"frame\":null},{\"x\":[-4,-3.8367346938775508,-3.6734693877551021,-3.510204081632653,-3.3469387755102042,-3.1836734693877551,-3.0204081632653059,-2.8571428571428572,-2.6938775510204085,-2.5306122448979593,-2.3673469387755102,-2.2040816326530615,-2.0408163265306123,-1.8775510204081636,-1.7142857142857144,-1.5510204081632657,-1.3877551020408165,-1.2244897959183674,-1.0612244897959187,-0.8979591836734695,-0.73469387755102078,-0.57142857142857162,-0.4081632653061229,-0.24489795918367374,-0.08163265306122458,0.08163265306122458,0.24489795918367285,0.40816326530612201,0.57142857142857117,0.73469387755102034,0.89795918367346861,1.0612244897959178,1.2244897959183669,1.3877551020408161,1.5510204081632653,1.7142857142857135,1.8775510204081627,2.0408163265306118,2.204081632653061,2.3673469387755093,2.5306122448979584,2.6938775510204076,2.8571428571428568,3.0204081632653059,3.1836734693877542,3.3469387755102034,3.5102040816326525,3.6734693877551017,3.8367346938775508,4],\"y\":[-4,-3.8367346938775508,-3.6734693877551021,-3.510204081632653,-3.3469387755102042,-3.1836734693877551,-3.0204081632653059,-2.8571428571428572,-2.6938775510204085,-2.5306122448979593,-2.3673469387755102,-2.2040816326530615,-2.0408163265306123,-1.8775510204081636,-1.7142857142857144,-1.5510204081632657,-1.3877551020408165,-1.2244897959183674,-1.0612244897959187,-0.8979591836734695,-0.73469387755102078,-0.57142857142857162,-0.4081632653061229,-0.24489795918367374,-0.08163265306122458,0.08163265306122458,0.24489795918367285,0.40816326530612201,0.57142857142857117,0.73469387755102034,0.89795918367346861,1.0612244897959178,1.2244897959183669,1.3877551020408161,1.5510204081632653,1.7142857142857135,1.8775510204081627,2.0408163265306118,2.204081632653061,2.3673469387755093,2.5306122448979584,2.6938775510204076,2.8571428571428568,3.0204081632653059,3.1836734693877542,3.3469387755102034,3.5102040816326525,3.6734693877551017,3.8367346938775508,4],\"zmode\":\"markers\",\"type\":\"surface\",\"opacity\":0.5,\"name\":\"1\",\"frame\":null},{\"x\":[-4,-3.8367346938775508,-3.6734693877551021,-3.510204081632653,-3.3469387755102042,-3.1836734693877551,-3.0204081632653059,-2.8571428571428572,-2.6938775510204085,-2.5306122448979593,-2.3673469387755102,-2.2040816326530615,-2.0408163265306123,-1.8775510204081636,-1.7142857142857144,-1.5510204081632657,-1.3877551020408165,-1.2244897959183674,-1.0612244897959187,-0.8979591836734695,-0.73469387755102078,-0.57142857142857162,-0.4081632653061229,-0.24489795918367374,-0.08163265306122458,0.08163265306122458,0.24489795918367285,0.40816326530612201,0.57142857142857117,0.73469387755102034,0.89795918367346861,1.0612244897959178,1.2244897959183669,1.3877551020408161,1.5510204081632653,1.7142857142857135,1.8775510204081627,2.0408163265306118,2.204081632653061,2.3673469387755093,2.5306122448979584,2.6938775510204076,2.8571428571428568,3.0204081632653059,3.1836734693877542,3.3469387755102034,3.5102040816326525,3.6734693877551017,3.8367346938775508,4],\"y\":[-4,-3.8367346938775508,-3.6734693877551021,-3.510204081632653,-3.3469387755102042,-3.1836734693877551,-3.0204081632653059,-2.8571428571428572,-2.6938775510204085,-2.5306122448979593,-2.3673469387755102,-2.2040816326530615,-2.0408163265306123,-1.8775510204081636,-1.7142857142857144,-1.5510204081632657,-1.3877551020408165,-1.2244897959183674,-1.0612244897959187,-0.8979591836734695,-0.73469387755102078,-0.57142857142857162,-0.4081632653061229,-0.24489795918367374,-0.08163265306122458,0.08163265306122458,0.24489795918367285,0.40816326530612201,0.57142857142857117,0.73469387755102034,0.89795918367346861,1.0612244897959178,1.2244897959183669,1.3877551020408161,1.5510204081632653,1.7142857142857135,1.8775510204081627,2.0408163265306118,2.204081632653061,2.3673469387755093,2.5306122448979584,2.6938775510204076,2.8571428571428568,3.0204081632653059,3.1836734693877542,3.3469387755102034,3.5102040816326525,3.6734693877551017,3.8367346938775508,4],\"zmode\":\"markers\",\"type\":\"surface\",\"opacity\":0.5,\"name\":\"2\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [
      "10_SVM_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
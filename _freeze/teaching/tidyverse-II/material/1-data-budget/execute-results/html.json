{
  "hash": "1dc824ad80f249ed76af871e01eea647",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Worksheet 1 - Your data budget\"\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Data on forests in Washington\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n✔ broom        1.0.7     ✔ recipes      1.2.0\n✔ dials        1.4.0     ✔ rsample      1.2.1\n✔ dplyr        1.1.4     ✔ tibble       3.2.1\n✔ ggplot2      3.5.1     ✔ tidyr        1.3.1\n✔ infer        1.0.7     ✔ tune         1.3.0\n✔ modeldata    1.4.0     ✔ workflows    1.2.0\n✔ parsnip      1.3.1     ✔ workflowsets 1.1.0\n✔ purrr        1.0.4     ✔ yardstick    1.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard() masks scales::discard()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\n✖ recipes::step()  masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(forested)\n\nforested\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,107 × 19\n   forested  year elevation eastness northness roughness tree_no_tree dew_temp\n   <fct>    <dbl>     <dbl>    <dbl>     <dbl>     <dbl> <fct>           <dbl>\n 1 Yes       2005       881       90        43        63 Tree             0.04\n 2 Yes       2005       113      -25        96        30 Tree             6.4 \n 3 No        2005       164      -84        53        13 Tree             6.06\n 4 Yes       2005       299       93        34         6 No tree          4.43\n 5 Yes       2005       806       47       -88        35 Tree             1.06\n 6 Yes       2005       736      -27       -96        53 Tree             1.35\n 7 Yes       2005       636      -48        87         3 No tree          1.42\n 8 Yes       2005       224      -65       -75         9 Tree             6.39\n 9 Yes       2005        52      -62        78        42 Tree             6.5 \n10 Yes       2005      2240      -67       -74        99 No tree         -5.63\n# ℹ 7,097 more rows\n# ℹ 11 more variables: precip_annual <dbl>, temp_annual_mean <dbl>,\n#   temp_annual_min <dbl>, temp_annual_max <dbl>, temp_january_min <dbl>,\n#   vapor_min <dbl>, vapor_max <dbl>, canopy_cover <dbl>, lon <dbl>, lat <dbl>,\n#   land_type <fct>\n```\n\n\n:::\n:::\n\n\n## Your turn\n\nWhen is a good time to split your data?\n\n## Data splitting and spending\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\nforested_split <- initial_split(forested)\nforested_split\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n<Training/Testing/Total>\n<5330/1777/7107>\n```\n\n\n:::\n:::\n\n\nExtract the training and testing sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\nforested_train <- training(forested_split)\nforested_test <- testing(forested_split)\n```\n:::\n\n\n## Your turn\n\nSplit your data so 20% is held out for the test set.\n\nTry out different values in `set.seed()` to see how the results change.\n\nHint: Which argument in `initial_split()` handles the proportion split into training vs testing?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your code here!\n```\n:::\n\n\n## Your turn\n\nExplore the `forested_train` data on your own!\n\n* What's the distribution of the outcome, `forested`?\n* What's the distribution of numeric variables like `precip_annual`?\n* How does the distribution of `forested` differ across the categorical variables?\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Your code here!\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
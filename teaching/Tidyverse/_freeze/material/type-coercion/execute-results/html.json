{
  "hash": "90e83b634b5f1596c259b4b3a43a6a03",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Type coercion\"\nauthor: \"Termeh Shafie\"\nformat:\n  html:\n    embed-resources: true\neditor: visual\nexecute:\n  warning: false\n---\n\n\n-   `c(1, 1L, \"C\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1, 1L, \"C\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\" \"1\" \"C\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\n1L\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\n\"C\"\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"C\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1, 1L, \"C\"))\n```\n:::\n\n\n-   `c(1L / 0, \"A\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1L / 0, \"A\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Inf\" \"A\"  \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(1L)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(1L/0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(\"A\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1L / 0, \"A\"))\n```\n:::\n\n\n-   `c(1:3, 5)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(1:3, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3 5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(1:3, 5))\n```\n:::\n\n\n-   `c(3, \"3+\")`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(3, \"3+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"3\"  \"3+\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(\"3+\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(3, \"3+\"))\n```\n:::\n\n\n-   `c(NA, TRUE)`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(NA, TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]   NA TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(NA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#typeof(c(NA, TRUE))\n```\n:::\n",
    "supporting": [
      "type-coercion_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}